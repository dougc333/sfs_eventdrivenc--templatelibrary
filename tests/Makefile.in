# Makefile.in generated by automake 1.9.6 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# $Id: Makefile.am,v 1.30 2006/05/31 20:38:28 max Exp $
srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
check_PROGRAMS = $(am__EXEEXT_1)
subdir = tests
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/acsfs.m4 $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__EXEEXT_1 = test_aes$(EXEEXT) test_aiod$(EXEEXT) \
	test_armor$(EXEEXT) test_axprt$(EXEEXT) test_backoff$(EXEEXT) \
	test_barrett$(EXEEXT) test_bbuddy$(EXEEXT) \
	test_bitvec$(EXEEXT) test_blowfish$(EXEEXT) test_dsa$(EXEEXT) \
	test_elgamal$(EXEEXT) test_esign$(EXEEXT) test_itree$(EXEEXT) \
	test_montgom$(EXEEXT) test_mpz_raw$(EXEEXT) \
	test_mpz_square$(EXEEXT) test_mpz_xor$(EXEEXT) \
	test_rabin$(EXEEXT) test_sha1$(EXEEXT) test_srp$(EXEEXT) \
	test_passfd$(EXEEXT) test_tiger$(EXEEXT) test_timecb$(EXEEXT) \
	test_hashcash$(EXEEXT) test_schnorr$(EXEEXT) \
	test_tame$(EXEEXT)
am_test_aes_OBJECTS = test_aes.$(OBJEXT)
test_aes_OBJECTS = $(am_test_aes_OBJECTS)
test_aes_LDADD = $(LDADD)
test_aes_DEPENDENCIES =
am_test_aiod_OBJECTS = test_aiod.$(OBJEXT)
test_aiod_OBJECTS = $(am_test_aiod_OBJECTS)
test_aiod_LDADD = $(LDADD)
test_aiod_DEPENDENCIES =
am_test_armor_OBJECTS = test_armor.$(OBJEXT)
test_armor_OBJECTS = $(am_test_armor_OBJECTS)
test_armor_LDADD = $(LDADD)
test_armor_DEPENDENCIES =
am_test_axprt_OBJECTS = test_axprt.$(OBJEXT)
test_axprt_OBJECTS = $(am_test_axprt_OBJECTS)
test_axprt_LDADD = $(LDADD)
test_axprt_DEPENDENCIES =
am_test_backoff_OBJECTS = test_backoff.$(OBJEXT)
test_backoff_OBJECTS = $(am_test_backoff_OBJECTS)
test_backoff_LDADD = $(LDADD)
test_backoff_DEPENDENCIES =
am_test_barrett_OBJECTS = test_barrett.$(OBJEXT)
test_barrett_OBJECTS = $(am_test_barrett_OBJECTS)
test_barrett_LDADD = $(LDADD)
test_barrett_DEPENDENCIES =
am_test_bbuddy_OBJECTS = test_bbuddy.$(OBJEXT)
test_bbuddy_OBJECTS = $(am_test_bbuddy_OBJECTS)
test_bbuddy_LDADD = $(LDADD)
test_bbuddy_DEPENDENCIES =
am_test_bitvec_OBJECTS = test_bitvec.$(OBJEXT)
test_bitvec_OBJECTS = $(am_test_bitvec_OBJECTS)
test_bitvec_LDADD = $(LDADD)
test_bitvec_DEPENDENCIES =
am_test_blowfish_OBJECTS = test_blowfish.$(OBJEXT)
test_blowfish_OBJECTS = $(am_test_blowfish_OBJECTS)
test_blowfish_LDADD = $(LDADD)
test_blowfish_DEPENDENCIES =
am_test_dsa_OBJECTS = test_dsa.$(OBJEXT)
test_dsa_OBJECTS = $(am_test_dsa_OBJECTS)
test_dsa_LDADD = $(LDADD)
test_dsa_DEPENDENCIES =
am_test_elgamal_OBJECTS = test_elgamal.$(OBJEXT)
test_elgamal_OBJECTS = $(am_test_elgamal_OBJECTS)
test_elgamal_LDADD = $(LDADD)
test_elgamal_DEPENDENCIES =
am_test_esign_OBJECTS = test_esign.$(OBJEXT)
test_esign_OBJECTS = $(am_test_esign_OBJECTS)
test_esign_LDADD = $(LDADD)
test_esign_DEPENDENCIES =
am_test_hashcash_OBJECTS = test_hashcash.$(OBJEXT)
test_hashcash_OBJECTS = $(am_test_hashcash_OBJECTS)
test_hashcash_LDADD = $(LDADD)
test_hashcash_DEPENDENCIES =
am_test_itree_OBJECTS = test_itree.$(OBJEXT)
test_itree_OBJECTS = $(am_test_itree_OBJECTS)
test_itree_LDADD = $(LDADD)
test_itree_DEPENDENCIES =
am_test_montgom_OBJECTS = test_montgom.$(OBJEXT)
test_montgom_OBJECTS = $(am_test_montgom_OBJECTS)
test_montgom_LDADD = $(LDADD)
test_montgom_DEPENDENCIES =
am_test_mpz_raw_OBJECTS = test_mpz_raw.$(OBJEXT)
test_mpz_raw_OBJECTS = $(am_test_mpz_raw_OBJECTS)
test_mpz_raw_LDADD = $(LDADD)
test_mpz_raw_DEPENDENCIES =
am_test_mpz_square_OBJECTS = test_mpz_square.$(OBJEXT)
test_mpz_square_OBJECTS = $(am_test_mpz_square_OBJECTS)
test_mpz_square_LDADD = $(LDADD)
test_mpz_square_DEPENDENCIES =
am_test_mpz_xor_OBJECTS = test_mpz_xor.$(OBJEXT)
test_mpz_xor_OBJECTS = $(am_test_mpz_xor_OBJECTS)
test_mpz_xor_LDADD = $(LDADD)
test_mpz_xor_DEPENDENCIES =
am_test_passfd_OBJECTS = test_passfd.$(OBJEXT)
test_passfd_OBJECTS = $(am_test_passfd_OBJECTS)
test_passfd_LDADD = $(LDADD)
test_passfd_DEPENDENCIES =
am_test_rabin_OBJECTS = test_rabin.$(OBJEXT)
test_rabin_OBJECTS = $(am_test_rabin_OBJECTS)
test_rabin_LDADD = $(LDADD)
test_rabin_DEPENDENCIES =
am_test_schnorr_OBJECTS = test_schnorr.$(OBJEXT)
test_schnorr_OBJECTS = $(am_test_schnorr_OBJECTS)
test_schnorr_LDADD = $(LDADD)
test_schnorr_DEPENDENCIES =
am_test_sha1_OBJECTS = test_sha1.$(OBJEXT)
test_sha1_OBJECTS = $(am_test_sha1_OBJECTS)
test_sha1_LDADD = $(LDADD)
test_sha1_DEPENDENCIES =
am_test_srp_OBJECTS = test_srp.$(OBJEXT)
test_srp_OBJECTS = $(am_test_srp_OBJECTS)
test_srp_LDADD = $(LDADD)
test_srp_DEPENDENCIES =
am_test_tame_OBJECTS = test_tame.$(OBJEXT)
test_tame_OBJECTS = $(am_test_tame_OBJECTS)
test_tame_LDADD = $(LDADD)
test_tame_DEPENDENCIES =
am_test_tiger_OBJECTS = test_tiger.$(OBJEXT)
test_tiger_OBJECTS = $(am_test_tiger_OBJECTS)
test_tiger_LDADD = $(LDADD)
test_tiger_DEPENDENCIES =
am_test_timecb_OBJECTS = test_timecb.$(OBJEXT)
test_timecb_OBJECTS = $(am_test_timecb_OBJECTS)
test_timecb_LDADD = $(LDADD)
test_timecb_DEPENDENCIES =
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(test_aes_SOURCES) $(test_aiod_SOURCES) \
	$(test_armor_SOURCES) $(test_axprt_SOURCES) \
	$(test_backoff_SOURCES) $(test_barrett_SOURCES) \
	$(test_bbuddy_SOURCES) $(test_bitvec_SOURCES) \
	$(test_blowfish_SOURCES) $(test_dsa_SOURCES) \
	$(test_elgamal_SOURCES) $(test_esign_SOURCES) \
	$(test_hashcash_SOURCES) $(test_itree_SOURCES) \
	$(test_montgom_SOURCES) $(test_mpz_raw_SOURCES) \
	$(test_mpz_square_SOURCES) $(test_mpz_xor_SOURCES) \
	$(test_passfd_SOURCES) $(test_rabin_SOURCES) \
	$(test_schnorr_SOURCES) $(test_sha1_SOURCES) \
	$(test_srp_SOURCES) $(test_tame_SOURCES) $(test_tiger_SOURCES) \
	$(test_timecb_SOURCES)
DIST_SOURCES = $(test_aes_SOURCES) $(test_aiod_SOURCES) \
	$(test_armor_SOURCES) $(test_axprt_SOURCES) \
	$(test_backoff_SOURCES) $(test_barrett_SOURCES) \
	$(test_bbuddy_SOURCES) $(test_bitvec_SOURCES) \
	$(test_blowfish_SOURCES) $(test_dsa_SOURCES) \
	$(test_elgamal_SOURCES) $(test_esign_SOURCES) \
	$(test_hashcash_SOURCES) $(test_itree_SOURCES) \
	$(test_montgom_SOURCES) $(test_mpz_raw_SOURCES) \
	$(test_mpz_square_SOURCES) $(test_mpz_xor_SOURCES) \
	$(test_passfd_SOURCES) $(test_rabin_SOURCES) \
	$(test_schnorr_SOURCES) $(test_sha1_SOURCES) \
	$(test_srp_SOURCES) $(test_tame_SOURCES) $(test_tiger_SOURCES) \
	$(test_timecb_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AR = @AR@
AUTH_HELPER_LIB = @AUTH_HELPER_LIB@
AUTH_HELPER_STYLE = @AUTH_HELPER_STYLE@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEBUG = @CXXDEBUG@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CXXNOERR = @CXXNOERR@
CXXWFLAGS = @CXXWFLAGS@
CYGPATH_W = @CYGPATH_W@
DBDEPS = @DBDEPS@
DBLIB = @DBLIB@
DB_LIB = @DB_LIB@
DEBUG = @DEBUG@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DMALLOC_FALSE = @DMALLOC_FALSE@
DMALLOC_TRUE = @DMALLOC_TRUE@
ECFLAGS = @ECFLAGS@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
ECXXFLAGS = @ECXXFLAGS@
EGREP = @EGREP@
ETAGS_ARGS = @ETAGS_ARGS@
EXEEXT = @EXEEXT@
F77 = @F77@
FFLAGS = @FFLAGS@
GMP_DIR = @GMP_DIR@
GREP = @GREP@
HAVE_X_FALSE = @HAVE_X_FALSE@
HAVE_X_TRUE = @HAVE_X_TRUE@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDADD = @LDADD@
LDEPS = @LDEPS@
LDFLAGS = @LDFLAGS@
LEX = @LEX@
LEXLIB = @LEXLIB@
LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@
LIBADB = @LIBADB@
LIBARPC = @LIBARPC@
LIBASYNC = @LIBASYNC@
LIBCRYPT = @LIBCRYPT@
LIBGMP = @LIBGMP@
LIBOBJS = @LIBOBJS@
LIBPY = @LIBPY@
LIBS = @LIBS@
LIBSFSCRYPT = @LIBSFSCRYPT@
LIBSFSMISC = @LIBSFSMISC@
LIBSFSRODB = @LIBSFSRODB@
LIBSVC = @LIBSVC@
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
M4 = @M4@
MAKEINFO = @MAKEINFO@
MALLOCK = @MALLOCK@
NOPAGING = @NOPAGING@
NW = @NW@
OBJEXT = @OBJEXT@
OPENSSL_DIR = @OPENSSL_DIR@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_DF = @PATH_DF@
PATH_DMESG = @PATH_DMESG@
PATH_FSTAT = @PATH_FSTAT@
PATH_LOGGER = @PATH_LOGGER@
PATH_LS = @PATH_LS@
PATH_LSOF = @PATH_LSOF@
PATH_NETSTAT = @PATH_NETSTAT@
PATH_NFSSTAT = @PATH_NFSSTAT@
PATH_NTPQ = @PATH_NTPQ@
PATH_PS = @PATH_PS@
PATH_SEPARATOR = @PATH_SEPARATOR@
PATH_SESSREG = @PATH_SESSREG@
PATH_SU = @PATH_SU@
PATH_VMSTAT = @PATH_VMSTAT@
PATH_W = @PATH_W@
PATH_XAUTH = @PATH_XAUTH@
PERL = @PERL@
PERL_POD_MAN = @PERL_POD_MAN@
POD2MAN = @POD2MAN@
PTYLIB = @PTYLIB@
RANLIB = @RANLIB@
REPO_FALSE = @REPO_FALSE@
REPO_TRUE = @REPO_TRUE@
RPCC = @RPCC@
SETUSERCONTEXTLIB = @SETUSERCONTEXTLIB@
SET_MAKE = @SET_MAKE@
SFSRO_PROXY_LIB = @SFSRO_PROXY_LIB@
SHELL = @SHELL@
STATIC_FALSE = @STATIC_FALSE@
STATIC_TRUE = @STATIC_TRUE@
STRIP = @STRIP@
TAME = @TAME@
USE_AUTH_HELPER_FALSE = @USE_AUTH_HELPER_FALSE@
USE_AUTH_HELPER_TRUE = @USE_AUTH_HELPER_TRUE@
USE_DB_FALSE = @USE_DB_FALSE@
USE_DB_TRUE = @USE_DB_TRUE@
VERSION = @VERSION@
WFLAGS = @WFLAGS@
XMKMF = @XMKMF@
X_CFLAGS = @X_CFLAGS@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_LIBS = @X_LIBS@
X_PRE_LIBS = @X_PRE_LIBS@
YACC = @YACC@
YFLAGS = @YFLAGS@
_PATH_CPP = @_PATH_CPP@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@
am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
etcdir = @etcdir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
piddir = @piddir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sfsdir = @sfsdir@
sfsexecdir = @sfsexecdir@
sfsgroup = @sfsgroup@
sfsincludedir = @sfsincludedir@
sfslibdir = @sfslibdir@
sfsuser = @sfsuser@
sharedstatedir = @sharedstatedir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
TESTS = test_aes \
	test_aiod \
	test_armor \
	test_axprt \
	test_backoff \
	test_barrett \
	test_bbuddy \
	test_bitvec \
	test_blowfish \
	test_dsa \
	test_elgamal \
	test_esign \
	test_itree \
	test_montgom \
	test_mpz_raw \
	test_mpz_square \
	test_mpz_xor \
	test_rabin \
	test_sha1 \
	test_srp \
	test_passfd \
	test_tiger \
	test_timecb \
	test_hashcash \
	test_schnorr \
	test_tame

SUFFIXES = .T .C .h
test_aes_SOURCES = test_aes.C
test_aiod_SOURCES = test_aiod.C
test_armor_SOURCES = test_armor.C
test_axprt_SOURCES = test_axprt.C
test_backoff_SOURCES = test_backoff.C
test_barrett_SOURCES = test_barrett.C
test_bbuddy_SOURCES = test_bbuddy.C
test_bitvec_SOURCES = test_bitvec.C
test_blowfish_SOURCES = test_blowfish.C
test_dsa_SOURCES = test_dsa.C
test_elgamal_SOURCES = test_elgamal.C
test_esign_SOURCES = test_esign.C
test_hashcash_SOURCES = test_hashcash.C
test_itree_SOURCES = test_itree.C
test_montgom_SOURCES = test_montgom.C
test_mpz_raw_SOURCES = test_mpz_raw.C
test_mpz_square_SOURCES = test_mpz_square.C
test_mpz_xor_SOURCES = test_mpz_xor.C
test_paillier_SOURCES = test_paillier.C
test_passfd_SOURCES = test_passfd.C
test_pm_SOURCES = test_pm.C
test_rabin_SOURCES = test_rabin.C
test_sha1_SOURCES = test_sha1.C
test_srp_SOURCES = test_srp.C
test_tiger_SOURCES = test_tiger.C
test_timecb_SOURCES = test_timecb.C
test_schnorr_SOURCES = test_schnorr.C
test_tame_SOURCES = test_tame.C
CLEANFILES = core *.core *~ *.rpo test_tame.C
MAINTAINERCLEANFILES = Makefile.in
EXTRA_DIST = .cvsignore test_tame.T
all: all-am

.SUFFIXES:
.SUFFIXES: .T .C .h .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  tests/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  tests/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
test_aes$(EXEEXT): $(test_aes_OBJECTS) $(test_aes_DEPENDENCIES) 
	@rm -f test_aes$(EXEEXT)
	$(CXXLINK) $(test_aes_LDFLAGS) $(test_aes_OBJECTS) $(test_aes_LDADD) $(LIBS)
test_aiod$(EXEEXT): $(test_aiod_OBJECTS) $(test_aiod_DEPENDENCIES) 
	@rm -f test_aiod$(EXEEXT)
	$(CXXLINK) $(test_aiod_LDFLAGS) $(test_aiod_OBJECTS) $(test_aiod_LDADD) $(LIBS)
test_armor$(EXEEXT): $(test_armor_OBJECTS) $(test_armor_DEPENDENCIES) 
	@rm -f test_armor$(EXEEXT)
	$(CXXLINK) $(test_armor_LDFLAGS) $(test_armor_OBJECTS) $(test_armor_LDADD) $(LIBS)
test_axprt$(EXEEXT): $(test_axprt_OBJECTS) $(test_axprt_DEPENDENCIES) 
	@rm -f test_axprt$(EXEEXT)
	$(CXXLINK) $(test_axprt_LDFLAGS) $(test_axprt_OBJECTS) $(test_axprt_LDADD) $(LIBS)
test_backoff$(EXEEXT): $(test_backoff_OBJECTS) $(test_backoff_DEPENDENCIES) 
	@rm -f test_backoff$(EXEEXT)
	$(CXXLINK) $(test_backoff_LDFLAGS) $(test_backoff_OBJECTS) $(test_backoff_LDADD) $(LIBS)
test_barrett$(EXEEXT): $(test_barrett_OBJECTS) $(test_barrett_DEPENDENCIES) 
	@rm -f test_barrett$(EXEEXT)
	$(CXXLINK) $(test_barrett_LDFLAGS) $(test_barrett_OBJECTS) $(test_barrett_LDADD) $(LIBS)
test_bbuddy$(EXEEXT): $(test_bbuddy_OBJECTS) $(test_bbuddy_DEPENDENCIES) 
	@rm -f test_bbuddy$(EXEEXT)
	$(CXXLINK) $(test_bbuddy_LDFLAGS) $(test_bbuddy_OBJECTS) $(test_bbuddy_LDADD) $(LIBS)
test_bitvec$(EXEEXT): $(test_bitvec_OBJECTS) $(test_bitvec_DEPENDENCIES) 
	@rm -f test_bitvec$(EXEEXT)
	$(CXXLINK) $(test_bitvec_LDFLAGS) $(test_bitvec_OBJECTS) $(test_bitvec_LDADD) $(LIBS)
test_blowfish$(EXEEXT): $(test_blowfish_OBJECTS) $(test_blowfish_DEPENDENCIES) 
	@rm -f test_blowfish$(EXEEXT)
	$(CXXLINK) $(test_blowfish_LDFLAGS) $(test_blowfish_OBJECTS) $(test_blowfish_LDADD) $(LIBS)
test_dsa$(EXEEXT): $(test_dsa_OBJECTS) $(test_dsa_DEPENDENCIES) 
	@rm -f test_dsa$(EXEEXT)
	$(CXXLINK) $(test_dsa_LDFLAGS) $(test_dsa_OBJECTS) $(test_dsa_LDADD) $(LIBS)
test_elgamal$(EXEEXT): $(test_elgamal_OBJECTS) $(test_elgamal_DEPENDENCIES) 
	@rm -f test_elgamal$(EXEEXT)
	$(CXXLINK) $(test_elgamal_LDFLAGS) $(test_elgamal_OBJECTS) $(test_elgamal_LDADD) $(LIBS)
test_esign$(EXEEXT): $(test_esign_OBJECTS) $(test_esign_DEPENDENCIES) 
	@rm -f test_esign$(EXEEXT)
	$(CXXLINK) $(test_esign_LDFLAGS) $(test_esign_OBJECTS) $(test_esign_LDADD) $(LIBS)
test_hashcash$(EXEEXT): $(test_hashcash_OBJECTS) $(test_hashcash_DEPENDENCIES) 
	@rm -f test_hashcash$(EXEEXT)
	$(CXXLINK) $(test_hashcash_LDFLAGS) $(test_hashcash_OBJECTS) $(test_hashcash_LDADD) $(LIBS)
test_itree$(EXEEXT): $(test_itree_OBJECTS) $(test_itree_DEPENDENCIES) 
	@rm -f test_itree$(EXEEXT)
	$(CXXLINK) $(test_itree_LDFLAGS) $(test_itree_OBJECTS) $(test_itree_LDADD) $(LIBS)
test_montgom$(EXEEXT): $(test_montgom_OBJECTS) $(test_montgom_DEPENDENCIES) 
	@rm -f test_montgom$(EXEEXT)
	$(CXXLINK) $(test_montgom_LDFLAGS) $(test_montgom_OBJECTS) $(test_montgom_LDADD) $(LIBS)
test_mpz_raw$(EXEEXT): $(test_mpz_raw_OBJECTS) $(test_mpz_raw_DEPENDENCIES) 
	@rm -f test_mpz_raw$(EXEEXT)
	$(CXXLINK) $(test_mpz_raw_LDFLAGS) $(test_mpz_raw_OBJECTS) $(test_mpz_raw_LDADD) $(LIBS)
test_mpz_square$(EXEEXT): $(test_mpz_square_OBJECTS) $(test_mpz_square_DEPENDENCIES) 
	@rm -f test_mpz_square$(EXEEXT)
	$(CXXLINK) $(test_mpz_square_LDFLAGS) $(test_mpz_square_OBJECTS) $(test_mpz_square_LDADD) $(LIBS)
test_mpz_xor$(EXEEXT): $(test_mpz_xor_OBJECTS) $(test_mpz_xor_DEPENDENCIES) 
	@rm -f test_mpz_xor$(EXEEXT)
	$(CXXLINK) $(test_mpz_xor_LDFLAGS) $(test_mpz_xor_OBJECTS) $(test_mpz_xor_LDADD) $(LIBS)
test_passfd$(EXEEXT): $(test_passfd_OBJECTS) $(test_passfd_DEPENDENCIES) 
	@rm -f test_passfd$(EXEEXT)
	$(CXXLINK) $(test_passfd_LDFLAGS) $(test_passfd_OBJECTS) $(test_passfd_LDADD) $(LIBS)
test_rabin$(EXEEXT): $(test_rabin_OBJECTS) $(test_rabin_DEPENDENCIES) 
	@rm -f test_rabin$(EXEEXT)
	$(CXXLINK) $(test_rabin_LDFLAGS) $(test_rabin_OBJECTS) $(test_rabin_LDADD) $(LIBS)
test_schnorr$(EXEEXT): $(test_schnorr_OBJECTS) $(test_schnorr_DEPENDENCIES) 
	@rm -f test_schnorr$(EXEEXT)
	$(CXXLINK) $(test_schnorr_LDFLAGS) $(test_schnorr_OBJECTS) $(test_schnorr_LDADD) $(LIBS)
test_sha1$(EXEEXT): $(test_sha1_OBJECTS) $(test_sha1_DEPENDENCIES) 
	@rm -f test_sha1$(EXEEXT)
	$(CXXLINK) $(test_sha1_LDFLAGS) $(test_sha1_OBJECTS) $(test_sha1_LDADD) $(LIBS)
test_srp$(EXEEXT): $(test_srp_OBJECTS) $(test_srp_DEPENDENCIES) 
	@rm -f test_srp$(EXEEXT)
	$(CXXLINK) $(test_srp_LDFLAGS) $(test_srp_OBJECTS) $(test_srp_LDADD) $(LIBS)
test_tame$(EXEEXT): $(test_tame_OBJECTS) $(test_tame_DEPENDENCIES) 
	@rm -f test_tame$(EXEEXT)
	$(CXXLINK) $(test_tame_LDFLAGS) $(test_tame_OBJECTS) $(test_tame_LDADD) $(LIBS)
test_tiger$(EXEEXT): $(test_tiger_OBJECTS) $(test_tiger_DEPENDENCIES) 
	@rm -f test_tiger$(EXEEXT)
	$(CXXLINK) $(test_tiger_LDFLAGS) $(test_tiger_OBJECTS) $(test_tiger_LDADD) $(LIBS)
test_timecb$(EXEEXT): $(test_timecb_OBJECTS) $(test_timecb_DEPENDENCIES) 
	@rm -f test_timecb$(EXEEXT)
	$(CXXLINK) $(test_timecb_LDFLAGS) $(test_timecb_OBJECTS) $(test_timecb_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_aes.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_aiod.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_armor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_axprt.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_backoff.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_barrett.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_bbuddy.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_bitvec.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_blowfish.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_dsa.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_elgamal.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_esign.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_hashcash.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_itree.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_montgom.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_mpz_raw.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_mpz_square.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_mpz_xor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_passfd.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_rabin.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_schnorr.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_sha1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_srp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_tame.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_tiger.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_timecb.Po@am__quote@

.C.o:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.C.obj:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.C.lo:
@am__fastdepCXX_TRUE@	if $(LTCXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list='$(TESTS)'; \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *" $$tst "*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		echo "XPASS: $$tst"; \
	      ;; \
	      *) \
		echo "PASS: $$tst"; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *" $$tst "*) \
		xfail=`expr $$xfail + 1`; \
		echo "XFAIL: $$tst"; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		echo "FAIL: $$tst"; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      echo "SKIP: $$tst"; \
	    fi; \
	  done; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="All $$all tests passed"; \
	    else \
	      banner="All $$all tests behaved as expected ($$xfail expected failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all tests failed"; \
	    else \
	      banner="$$failed of $$all tests did not behave as expected ($$xpass unexpected passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    skipped="($$skip tests were not run)"; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  echo "$$dashes"; \
	  echo "$$banner"; \
	  test -z "$$skipped" || echo "$$skipped"; \
	  test -z "$$report" || echo "$$report"; \
	  echo "$$dashes"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-exec-am:

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-info-am

.PHONY: CTAGS GTAGS all all-am check check-TESTS check-am clean \
	clean-checkPROGRAMS clean-generic clean-libtool ctags \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-exec install-exec-am install-info \
	install-info-am install-man install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-info-am


.T.C:
	-$(TAME) -o $@ $< || rm -f $@

test_tame.C: test_tame.T
#test_arpc_SOURCES = test_arpc.C

$(check_PROGRAMS): $(LDEPS)
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
